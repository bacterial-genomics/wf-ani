#!/bin/bash -l

SCRIPT_NAME="$(basename ${0#_} .uge-nextflow)"

# Set profile
# Get node number - <=230 = biolinux, >=231 = rosalind
NODE_NUM=$(echo ${HOSTNAME%%.*} | sed 's/node//1')
if [[ ${NODE_NUM} -ge 231 ]]; then
  HPC='rosalind'
else
  HPC='aspen'
fi

module load nextflow
nextflow \
  -log ${OUT}/nextflow_log.${SCRIPT_NAME}.txt \
  run \
  ${LAB_HOME}/workflows/wf-ani/main.nf \
  -ansi-log false \
  -profile singularity,${HPC} \
  -resume \
  --outpath ${OUT} \
  --inpath ${IN} \
  -w /scicomp/scratch/${USER}/work \
  -N ${USER}@cdc.gov

# Check for errors and add to errors.tsv
# Get nextflow run name
run_name=$(grep "Launching" ${OUT}/log/ANI_*.o${SCRIPT_NAME} | cut -d '[' -f 2 | cut -d ']' -f 1)

# Read each line from nextflow log, find info, and add to errors.tsv
while read -r line
do
  sample_name=$(grep "nf-" ${line}/.command.run | cut -d '(' -f 2 | cut -d ')' -f 1)
  process=$(grep "nf-" ${line}/.command.run | awk -F 'nf-' '{print $2}' | sed -e 's/_(.*//')
  error=$(tail -n 1 ${line}/.command.err | sed -e 's/\[[^][]*\]//g')

  # If process for sample retried and succeeded, ignore, else add to errors.tsv
  if [[ -f "$(ls ${OUT}/log/process_logs/${sample_name}.${process}*out | wc -l)" ]] \
  && [[ $(cat ${line}/.exitcode) = @(143|137|104|134|139|71|255) ]]; then
    continue
  else
    echo -e "${sample_name}\t${process}\t${error}\t${line}" >> ${OUT}/log/errors.tsv
  fi
done < <(nextflow log ${run_name} -filter 'status == "FAILED"')

# If errors.tsv found, add column headers
if [[ -f "${OUT}/log/errors.tsv" ]]; then
  sed -i '1i Sample Name\tProcess\tError\tError Directory' ${OUT}/log/errors.tsv
fi

# E-mail completion status
if [[ -f "${OUT}/ANI.Summary.tab" ]] && \
  [[ -f "${OUT}/log/errors.tsv" ]]; then
  # Count lines in ANI.Summary.tab (removes header line from count)
  num_results=$(awk 'END {print NR-1}' ${OUT}/ANI.Summary.tab)

  echo -e "ANI comparisons finished on $(date)\n${OUT}" | mail \
  -s "${num_results} ANI samples $(basename "${OUT}") [HPC]" \
  -S smtp="smtpgw.cdc.gov" \
  -a "${OUT}/ANI.Summary.tab" \
  -a "${OUT}/log/errors.tsv" \
  "${USER}@cdc.gov"

elif [[ -f "${OUT}/ANI.Summary.tab" ]]; then
  # Count lines in ANI.Summary.tab (removes header line from count)
  num_results=$(awk 'END {print NR-1}' ${OUT}/ANI.Summary.tab)

  echo -e "ANI comparisons finished on $(date)\n${OUT}" | mail \
  -s "${num_results} ANI samples $(basename "${OUT}") [HPC]" \
  -S smtp="smtpgw.cdc.gov" \
  -a "${OUT}/ANI.Summary.tab" \
  "${USER}@cdc.gov"

elif [[ -f "${OUT}/log/errors.tsv" ]]; then
  echo -e "ANI comparisons could not be completed on $(date)\n${OUT}" | mail \
  -s "No ANI results $(basename "${OUT}") [HPC]" \
  -S smtp="smtpgw.cdc.gov" \
  -a "${OUT}/log/errors.tsv" \
  "${USER}@cdc.gov"
fi